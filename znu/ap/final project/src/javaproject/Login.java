/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package javaproject;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.net.URL;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import java.util.Scanner;
import java.util.function.Predicate;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Administrator
 */
public class Login extends javax.swing.JFrame {

    /**
     * Creates new form Login
     */
    public Login() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextField1.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jTextField1.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("نام کاربری :");

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton1.setText("ثبت");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jComboBox1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "مدیر", "دانشجو", "استاد" }));
        jComboBox1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addGap(44, 44, 44))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jButton1, jComboBox1, jTextField1});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jButton1, jTextField1});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        String ID = jTextField1.getText();
        URL url1 = getClass().getResource("Student.txt");
        URL url2 = getClass().getResource("Teacher.txt");
        URL url3 = getClass().getResource("Class.txt");

        File StudentFile = new File(url1.getPath());
        File TeacherFile = new File(url2.getPath());
        File ClassFile = new File(url3.getPath());

        ArrayList<studentInfo> ListStudent = new ArrayList<>();
        ArrayList<TeacherInfo> ListTeacher = new ArrayList<>();
        ArrayList<ClassInfo> ListClass = new ArrayList<>();

        if (jComboBox1.getSelectedIndex() == 0 && ID.equals("Admin")==true) {

            ListStudent = GetStudentFromFile();
            ListTeacher = GetTeacherFromFile();
            ListClass = GetClassFromFile();
            AdminFrame.main(ListStudent, ListTeacher, ListClass);

        } else if (jComboBox1.getSelectedIndex() == 1 && StudentFile.exists()) {

            ListStudent = GetStudentFromFile();
            ListTeacher = GetTeacherFromFile();
            ListClass = GetClassFromFile();
            boolean find=false;
            for (studentInfo temp : ListStudent) {
                if (temp.getID().equals(ID) == true) {
                    find=true;
                    StudentFrame.main(ListStudent, ListTeacher, ListClass,ID);
                }
            }
            if(find==false)
                 JOptionPane.showMessageDialog(null, "این دانشجو ثبت شده نیست", "", JOptionPane.INFORMATION_MESSAGE);
 
        } else if (jComboBox1.getSelectedIndex() == 2 && TeacherFile.exists()) {

            ListStudent = GetStudentFromFile();
            ListTeacher = GetTeacherFromFile();
            ListClass = GetClassFromFile();
            boolean find=false;
            for (TeacherInfo temp : ListTeacher) {
                if (temp.getID().equals(ID) == true) {
                     find=true;
                    TeacherFrame.main(ListStudent, ListTeacher, ListClass,ID);

                }
            }
              if(find==false)
                 JOptionPane.showMessageDialog(null, "این استاد ثبت شده نیست", "", JOptionPane.INFORMATION_MESSAGE);
 
        }
        else
        {
             JOptionPane.showMessageDialog(null, "نام کاربری اشتباه است", "", JOptionPane.INFORMATION_MESSAGE);
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    ArrayList<studentInfo> GetStudentFromFile() {

        String ID = jTextField1.getText();
        URL url1 = getClass().getResource("Student.txt");

        File StudentFile = new File(url1.getPath());

        ArrayList<studentInfo> ListStudent = new ArrayList<>();

        try {
            ArrayList<String> stlst;
            stlst = (ArrayList<String>) Files.readAllLines(Paths.get(StudentFile.getPath()));

            for (int i = 0; i < stlst.size()-1&&  stlst.size()!=1; i++) {
                studentInfo temp = new studentInfo();
                temp.setName(stlst.get(i));
                temp.setFamily(stlst.get(i + 1));
                temp.setID(stlst.get(i + 2));
                int n = Integer.parseInt(stlst.get(i + 3));

                int k = 0;
                for (int j = 0; j < n; j++, k += 3) {
                    ClassInfo temp2 = new ClassInfo();
                    temp2.setName(stlst.get(i + 4 + k));
                    temp2.setVahed(Integer.parseInt(stlst.get(i + 5 + k)));
                    temp2.setDateTime(stlst.get(i + 6 + k));
                    temp.ListClass.add(temp2);
                }
                i = (i + 6 + k) - 2;

                int n2 = Integer.parseInt(stlst.get(i));

                int k2 = 0;
                for (int j = 0; j < n2; j++, k2 += 2) {
                    studentInfo.Scores t = new studentInfo.Scores();

                    t.name = (stlst.get(i + 1 + k2));
                    t.score = Integer.parseInt((stlst.get(i + 2+ k2)));
                    temp.ListStudentScores.add(t);
                }
                i = (i + 2 + k2)-2;

                ListStudent.add(temp);
            }

        } catch (IOException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        }
        return ListStudent;
    }

    ArrayList<TeacherInfo> GetTeacherFromFile() {
        {
            String ID = jTextField1.getText();
        }

        URL url2 = getClass().getResource("Teacher.txt");
        File TeacherFile = new File(url2.getPath());
        ArrayList<TeacherInfo> ListTeacher = new ArrayList<>();

        try {
            ArrayList<String> stlst;
            stlst = (ArrayList<String>) Files.readAllLines(Paths.get(TeacherFile.getPath()));

            for (int i = 0; i < stlst.size()-1; i++) {
                TeacherInfo temp = new TeacherInfo();
                temp.setName(stlst.get(i));
                temp.setFamily(stlst.get(i + 1));
                temp.setID(stlst.get(i + 2));
                int n = Integer.parseInt(stlst.get(i + 3));
                //i=i+3;
                int k = 0;
                for (int j = 0; j < n; j++, k += 3) {
                    ClassInfo temp2 = new ClassInfo();
                    temp2.setName(stlst.get(i + 4 + k));
                    temp2.setVahed(Integer.parseInt(stlst.get(i + 5 + k)));
                    temp2.setDateTime(stlst.get(i + 6 + k));
                    temp.ListClass.add(temp2);
                }
                i = i + 6 + k-3;
                ListTeacher.add(temp);
            }

        } catch (IOException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        }
        return ListTeacher;
    }

    ArrayList<ClassInfo> GetClassFromFile() {
        String ID = jTextField1.getText();
        URL url3 = getClass().getResource("Class.txt");
        File ClassFile = new File(url3.getPath());
        ArrayList<ClassInfo> ListClass = new ArrayList<>();
        ArrayList<String> stlst;
        try {
            stlst = (ArrayList<String>) Files.readAllLines(Paths.get(ClassFile.getPath()));

            for (int i = 0; i < stlst.size()-1; i += 3) {
                ClassInfo temp = new ClassInfo();
                temp.setName(stlst.get(i));
                temp.setVahed(Integer.parseInt(stlst.get(i + 1)));
                temp.setDateTime(stlst.get(i + 2));
                ListClass.add(temp);
            }
        } catch (IOException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        }
        return ListClass;
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Login().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
